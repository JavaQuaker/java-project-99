buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
	id 'java'
	id 'application'
	id 'checkstyle'
	id 'io.freefair.lombok' version '8.4'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.github.ben-manes.versions' version '0.49.0'
	id 'org.siouan.frontend-jdk11' version '6.0.0'
	id 'com.github.johnrengelman.processes' version '0.5.0'
	id 'org.springdoc.openapi-gradle-plugin' version '1.6.0'
//    id 'io.sentry.jvm.gradle' version '4.1.0'
	id 'jacoco'

}

group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '20'
}
application {
	// Входная точка
	mainClass = 'hexlet.code.AppApplication'
}

repositories {
	mavenCentral()
}

//sentry {
//	// Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.
//	// This enables source context, allowing you to see your source
//	// code as part of your stack traces in Sentry.
//	includeSourceContext = true
//
//	org = "hexlet-iy"
//	projectName = "java-spring-boot"
//	authToken = System.getenv("SENTRY_AUTH_TOKEN")
//}

dependencies {
	runtimeOnly 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.postgresql:postgresql:42.5.4'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	implementation 'org.instancio:instancio-junit:3.3.1'
	implementation 'net.datafaker:datafaker:2.0.2'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation(platform 'org.junit:junit-bom:5.10.0')
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'net.javacrumbs.json-unit:json-unit-assertj:3.2.2'
	implementation 'io.sentry:sentry-spring-boot-starter-jakarta:7.1.0'
	implementation group: 'org.jacoco', name: 'org.jacoco.core', version: '0.8.10'

}
tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}
//tasks.sentryBundleSourcesJava {
//	enabled = System.getenv("SENTRY_AUTH_TOKEN") != null
//}

tasks.named('test') {
	useJUnitPlatform()
}
jacocoTestReport {
	reports {
		xml.required = true
	}
}

test {
	finalizedBy jacocoTestReport
	useJUnitPlatform()
}


openApi {
	apiDocsUrl.set("http://localhost:8080/v3/api-docs")
}